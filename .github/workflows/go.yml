name: Go

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  linting:
    name: Linting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # TODO(adam): windows-latest
        version: stable
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: 10

    - name: Install make (Windows)
      if: runner.os == 'Windows'
      run: choco install -y make mingw

    - name: Check
      run: make check
      env:
        COVER_THRESHOLD: 85.0
        SKIP_TESTS: yes

  testing:
    name: Go Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # TODO(adam): windows-latest
        version: [stable, oldstable]
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: 10

    - name: Install make (Windows)
      if: runner.os == 'Windows'
      run: choco install -y make mingw

    - name: Check
      run: make check
      env:
        COVER_THRESHOLD: 85.0
        SKIP_LINTERS: yes

  docker-tests:
    name: Docker Image Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # TODO(adam): windows-latest
        version: stable
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: 10

    - name: Install make (Windows)
      if: runner.os == 'Windows'
      run: choco install -y make mingw

    - name: Tests
      run: make test
